def AG_SocketComms():
  set_tcp(p[0.0,0.0,0.174,0.0,0.0,0.0])
  set_payload(2.0)
  set_safety_mode_transition_hardness(1)
  step_count_54cfea07_594a_46ec_b1f0_db4eda05f280 = 0.0
  thread Step_Counter_Thread_4b85e918_e967_4593_98bf_9f285399cf53():
    while (True):
      step_count_54cfea07_594a_46ec_b1f0_db4eda05f280 = step_count_54cfea07_594a_46ec_b1f0_db4eda05f280 + 1.0
      sync()
    end
  end
  run Step_Counter_Thread_4b85e918_e967_4593_98bf_9f285399cf53()
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  set_tool_communication(False, 115200, 0, 1, 1.5, 3.5)
  set_tool_output_mode(0)
  set_tool_digital_output_mode(0, 1)
  set_tool_digital_output_mode(1, 1)
  set_tool_voltage(0)
  set_gravity([0.0, 0.0, 9.82])
  global up_pose_p=p[-.139608417870, -.431276583025, .128881236186, -.001221359682, 3.116276528482, .038891915637]
  global up_pose_q=[-1.6006999999532772, -1.5602662340053621, -2.0656244038598475, -1.1122093621336546, 1.5951000000012003, -0.030999999953279733]
  global down_pose_p=p[-.139608417867, -.431276582947, .015638902876, -.001221359682, 3.116276528482, .038891915637]
  global down_pose_q=[-1.6007000000057907, -1.7535815119226044, -2.215643614002417, -0.7688748740751139, 1.5950999999998547, -0.03100000000578973]
  global Vertical_3_p=p[-.139608417872, -.431276583102, .028138902829, -.001221359682, 3.116276528482, .038891915637]
  global Vertical_3_q=[-1.6006999999999998, -1.7271, -2.2029999999999994, -0.8079999999999998, 1.5951, -0.030999999999999694]
  global Tilted_1_p=p[-.139608417868, -.431276582996, .028138902982, -.011381173019, 3.019426224372, -.776094768972]
  global Tilted_1_q=[-1.6143181432207498, -1.730963551856462, -2.588173794846753, 0.1085536174237972, 1.6168206000396343, -0.039262279865630134]
  global Vertical_4_p=p[-.139608417866, -.431276582919, .131081236338, -.001221329928, 3.116276528722, .038891910429]
  global Vertical_4_q=[-1.600700000064136, -1.5575468977702354, -2.0619765024476475, -1.1185765962043455, 1.595100000182046, -0.030999980927620463]
  def AG_50():
    $ 52 "AG_50" "noBreak"
    $ 53 "'Rev 2021_12_02am 01'"
    # 'Rev 2021_12_02am 01'
    $ 54 "MoveL"
    $ 55 "Vertical_3" "breakAfter"
    movel(Vertical_3_p, a=1.2, v=0.25)
    $ 56 "Tilted_1" "breakAfter"
    movel(Tilted_1_p, a=1.2, v=0.25)
    $ 57 "Vertical_4" "breakAfter"
    movel(Vertical_4_p, a=1.2, v=0.25)
    $ 58 "response≔'50 success'"
    global response="50 success"
  end
  $ 1 "BeforeStart"
  $ 2 "start_pose≔get_actual_tcp_pose()"
  global start_pose= get_actual_tcp_pose ()
  $ 3 "MoveJ"
  $ 4 "start_pose" "breakAfter"
  movej(start_pose, a=1.3962634015954636, v=1.0471975511965976)
  $ 5 "socket_close()"
  socket_close()
  $ 6 "Wait: 0.25"
  sleep(0.25)
  $ 7 "socket_is_open≔ False "
  global socket_is_open=  False  
  $ 8 "command_index≔0"
  global command_index=0
  while (True):
    $ 9 "Robot Program"
    $ 10 "Loop socket_is_open ≟  False "
    while (socket_is_open  ==    False  ):
      $ 11 "socket_is_open≔socket_open('192.168.25.1', 30000)"
      global socket_is_open=socket_open("192.168.25.1", 30000)
      $ 12 "Wait: 0.5"
      sleep(0.5)
    end
    $ 13 "response≔'Unknown command'"
    global response="Unknown command"
    $ 14 "command≔socket_read_ascii_float(5)"
    global command=socket_read_ascii_float(5)
    $ 15 "If command[0]≟5"
    if (command[0] == 5):
      $ 16 "socket_send_line('robot_running=True')"
      socket_send_line("robot_running=True")
      $ 17 "command_index≔command_index+1"
      global command_index=command_index+1
      $ 18 "socket_set_var('robot_index', command_index)"
      socket_set_var("robot_index", command_index)
      $ 19 "Switch command[1]"
      switch_1 = command[1]
      $ 20 "Case 1"
      if (1 == switch_1):
        $ 21 "MoveL"
        $ 22 "up_pose" "breakAfter"
        movel(up_pose_p, a=1.2, v=0.25)
        $ 23 "response≔'moved up'"
        global response="moved up"
      elif (2 == switch_1):
        $ 24 "Case 2"
        $ 25 "MoveJ"
        $ 26 "down_pose" "breakAfter"
        movej(get_inverse_kin(down_pose_p, qnear=down_pose_q), a=1.3962634015954636, v=1.0471975511965976)
        $ 27 "response≔'moved down'"
        global response="moved down"
      elif (3 == switch_1):
        $ 28 "Case 3"
        $ 29 "response≔'close'"
        global response="close"
      elif (4 == switch_1):
        $ 30 "Case 4"
        $ 31 "response≔'open'"
        global response="open"
      elif (50 == switch_1):
        $ 32 "Case 50"
        $ 33 "Call AG_50"
        AG_50()
      elif (98 == switch_1):
        $ 34 "Case 98"
        $ 35 "response≔'socket reset'"
        global response="socket reset"
      elif (99 == switch_1):
        $ 36 "Case 99"
        $ 37 "response≔'exiting'"
        global response="exiting"
      else:
        $ 38 "Default Case"
        $ 39 "response≔'unknown command'"
        global response="unknown command"
      end
      $ 40 "socket_send_line('robot_response=' + response + '#robot_running=False')"
      socket_send_line("robot_response=" + response + "#robot_running=False")
      $ 41 "If command[1]≟98"
      if (command[1] == 98):
        $ 42 "Wait: 0.5"
        sleep(0.5)
        $ 43 "socket_close()"
        socket_close()
        $ 44 "socket_is_open≔ False "
        global socket_is_open=  False  
      end
      $ 45 "If command[1]≟99"
      if (command[1] == 99):
        $ 46 "Wait: 0.5"
        sleep(0.5)
        $ 47 "socket_close()"
        socket_close()
        $ 48 "socket_is_open≔ False "
        global socket_is_open=  False  
        $ 49 "Halt"
        halt
      end
    else:
      $ 50 "Else" "noBreak"
    end
  end
end
