# AutoGrind Robot Functions
# File: agscript_robot.script
# Version 1.0
# Programmer: Ned Lecky

global response = "unknown"

global speed = 0.3
global accel = 0.3

# Set speed to s if s<>0. Always returns "speed=[current speed]"
def set_speed(s):
  if s > 0:
    speed = s
  end
  socket_send_string("speed=")
  socket_send_string(speed)
  socket_send_lf()
  global response = "set_speed()"
end

# Set accel to a if a<>0. Always returns "accel=[current accel]"
def set_accel(a):
  if a > 0:
    accel = a
  end
  socket_send_string("accel=")
  socket_send_string(accel)
  socket_send_lf()
  global response = "set_accel()"
end

# Send get_tcp_offset() result to socket
def return_tcp_offset():
  p = get_tcp_offset()
  return_pose("tcp_offset", p)
  global response = "return_tcp_offset()"
end

# Send get_actual_tcp_pose() to socket
def return_actual_tcp_pose():
  p = get_actual_tcp_pose()
  return_pose("actual_tcp_pose", p)
  global response = "return_actual_tcp_pose()"
end

# Send return_actual_tcp_pose_RPY() to socket
def return_actual_tcp_pose_RPY():
  p = get_actual_tcp_pose_RPY()
  return_pose("actual_tcp_pose_RPY", p)
  global response = "return_actual_tcp_pose_RPY()"
end

# Send get_actual_joint_positions() to
def return_get_actual_joint_positions():
  p = get_actual_joint_positions()
  return_joints("actual_joint_positions", p)
  global response = "return_get_actual_joint_positions()"
end

# Movel relatively in RPY
def movel_RPY_rel():
  p0 = get_actual_tcp_pose_RPY()
  p1 = p[command[2], command[3], command[4], command[5], command[6], command[7]]
  p2 = pose_add_RPY(p0, p1)
  movel_RPY(p2, accel, speed)
  global response = "movel_RPY_rel()"
end

# Movej relatively in RPY
def movej_RPY_rel():
  p0 = get_actual_tcp_pose_RPY()
  p1 = p[command[2], command[3], command[4], command[5], command[6], command[7]]
  p2 = pose_add_RPY(p0, p1)
  movej_RPY(p2, accel, speed)
  global response = "movej_RPY_rel()"
end

# Movej to R
def movej_R_only(R = 0):
  p = get_actual_tcp_pose_RPY()
  p[3] = R
  movej_RPY(p, accel, speed)
  global response = "movej_R_only()"
end
# Movej to P
def movej_P_only(P = 0):
  p = get_actual_tcp_pose_RPY()
  p[4] = P
  movej_RPY(p, accel, speed)
  global response = "movej_P_only()"
end
# Movej to Y
def movej_Y_only(Y = 0):
  p = get_actual_tcp_pose_RPY()
  p[5] = Y
  movej_RPY(p, accel, speed)
  global response = "movej_Y_only()"
end
# Movej to 0,0,0, RPY
def movej_RPY_only(R=0, P=0, Y=0):
  p = get_actual_tcp_pose_RPY()
  p[3] = R
  p[4] = P
  p[5] = Y
  movej_RPY(p, accel, speed)
  global response = "movej_RPY_only()"
end

# Movej to physical joint positions
def movej_q():
  q1 = [command[2], command[3], command[4], command[5], command[6], command[7]]
  movej(q1, accel, speed)
  global response = "movej_q()"
end
