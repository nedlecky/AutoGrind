# AutoGrind System UR Program Script Functions
# File: ag_script.script
# Version 1.0
# Programmer: Ned Lecky

global scriptRunning = True
global response = "unknown"

global speed = 0.3
global accel = 0.3

# Send 6-vectore back to socket as name=(n,n,n,n,n,n)
def return_pose(name, p):
  socket_send_string(name)
  socket_send_string("=(")
  i = 0
  while i < 6:
    if i > 0:
      socket_send_string(",")
    end
    socket_send_string(p[i])
    i = i + 1
  end
  socket_send_string(")")
  socket_send_crlf()
end

# Send get_tcp_offset() result to socket
def return_tcp_offset():
  p = get_tcp_offset()
  return_pose("tcp_offset", p)
  global response = "return_tcp_offset()"
end

# Send get_actual_tcp_pose() to socket
def return_actual_tcp_pose():
  p = get_actual_tcp_pose()
  return_pose("actual_tcp_pose", p)
  global response = "return_actual_tcp_pose()"
end

# Send return_actual_tcp_pose_RPY() to socket
def return_actual_tcp_pose_RPY():
  p = get_actual_tcp_pose_RPY()
  return_pose("actual_tcp_pose_RPY", p)
  global response = "return_actual_tcp_pose_RPY()"
end

# Send get_actual_joint_positions() to
def return_get_actual_joint_positions():
  p = get_actual_joint_positions()
  return_pose("actual_joint_positions", p)
  global response = "return_get_actual_joint_positions()"
end

# Movel relatively in RPY
def movel_RPY_rel():
  p0 = get_actual_tcp_pose_RPY()
  p1 = p[command[2], command[3], command[4], command[5], command[6], command[7]]
  p2 = pose_add_RPY(p0, p1)
  movel_RPY(p2, accel, speed)
  global response = "movel_RPY_rel()"
end

# Movej relatively in RPY
def movej_RPY_rel():
  p0 = get_actual_tcp_pose_RPY()
  p1 = p[command[2], command[3], command[4], command[5], command[6], command[7]]
  p2 = pose_add_RPY(p0, p1)
  movej_RPY(p2, accel, speed)
  global response = "movej_RPY_rel()"
end

# Movej to 0,0,0, RPY
def movej_RPY_zero():
  p0 = get_actual_tcp_pose_RPY()
  p0[3] = 0
  p0[4] = 0
  p0[5] = 0
  movej_RPY(p0, accel, speed)
  global response = "movej_RPY_zero()"
end

# Movej to physical joint positions
def movej_q():
  q1 = [command[2], command[3], command[4], command[5], command[6], command[7]]
  movej(q1, accel, speed)
  global response = "movej_q()"
end

